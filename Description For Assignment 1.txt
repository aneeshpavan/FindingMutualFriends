Description For Assignment 1
Question 1: 
The given dataset has 50,000 lines of friends and each line has a person and their friends who are also included in the dataset. The mapper for the 1st question has the code explained below. First, we are going to group a particular person with each of his friends and map them to all the friends of the person. Then, from the output where the key is the pair of friends, and the values are friends of each person in the pair. We group the values to be in the same line of the key. The output of this process is then passed on to the reducer using context.write function.
In the reducer, where the key is a pair of friends, and the value is arrays of friends of each person. we then find the intersection of both the arrays by creating a list of friends from the 1st array which are only included in the second array. Finally, we use context.write function to pass the new list that we created as output. 
Question 2:
For this question we implement 2 mappers and 2 reducers. For the mapper 1 we take the output of first questions reducer as input and we exclude all the pairs of friends who have no mutual friends we then find the length of mutual friends of each pair and calculate the maximum value we set the max value as an object we then context.write the output with key that we got from input and the value as the length of mutual friends of the pair of friends in key. For 1st reducer where the key is pair of friends and the values are number of mutual friends we filter the key value pairs for which the value is the maximum number of friends (which we set as an object in the mapper). Then we context.write the key and the value which are the pair of friends who have the maximum number of mutual friends and pass it onto reducer. 
for the 2nd mapper we again take reduce of the 1st que as input and then we filter out pair of friends who have no mutual friends and then return the key and the values to the reducer coming to 2nd reducer where the key is the pair of friends and the values are the mutual friends we iterate through the values and append to new list if the values 1st character either contains a 1 or a 0 we then context.write the pair of friends as the key and the new list is the value.
Question 3: 
For the 3rd question, in the 1stmapper, we take the input as the output of the 1st questions reducer we remove all the pair of friends who have no mutual friends. We find the number of mutual friends for each pair. Then we context.write the pair of friends as key and number of mutual friends as value and pass it on to the reducer1. For the reducer1 we loop through all the pairs of mutual friends and find the sum of all the number of friends all the while keeping the count we divide the sum and the count to find the average we then context.write the avg. 
2nd mapper we take the input as reducer of 1st question reducer output we also read the average from the output file generated by previous reducer through the Hdfs and setting that in the context then we check the length of mutual friends of each pair and then make a new list who have the number of friends greater than the average and contect.write the key as pair of friends and the values as the friends. We then send this to the reducer which writes the same to the output file 
